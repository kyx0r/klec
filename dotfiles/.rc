#!/bin/sh

export KISS_SU=su
export KISS_PATH=
KISS_PATH="$HOME/kiss/no-updates"
KISS_PATH="$KISS_PATH:$HOME/kiss/repo-main/core"
KISS_PATH="$KISS_PATH:$HOME/kiss/repo-main/extra"
KISS_PATH="$KISS_PATH:$HOME/kiss/repo-main/xorg"
KISS_PATH="$KISS_PATH:$HOME/kiss/repo-community/community"
KISS_PATH="$KISS_PATH:$HOME/kiss/repo-vulkan"
KISS_PATH="$KISS_PATH:$HOME/kiss/grepo/bin"
KISS_PATH="$KISS_PATH:$HOME/kiss/grepo/core"
KISS_PATH="$KISS_PATH:$HOME/kiss/grepo/extra"
KISS_PATH="$KISS_PATH:$HOME/kiss/grepo/xorg"
KISS_PATH="$KISS_PATH:$HOME/kiss/gcommunity/community"
KISS_PATH="$KISS_PATH:$HOME/kiss/ksrepo"
export XDG_RUNTIME_DIR=/run/user/$(id -u)
export PATH=/root/klec/shell:$PATH
export EDITOR=vi
export PS1="\[\e[35m\]\w\[\e[m\] "
export CFLAGS="-O2"
export KCFLAGS="$CFLAGS"
export CXXFLAGS="$CFLAGS"
export KCPPFLAGS="$CFLAGS"
export MAKEFLAGS="-j$(nproc)"

if [ -f ~/ten_years__time_by_bythmark_d4dg6dz ]; then
if [[ ! -z "${DISPLAY}" ]]; then
sh -c 'feh --bg-scale ~/ten_years__time_by_bythmark_d4dg6dz &'
fi
fi

if type setxkbmap >/dev/null 2>&1; then
setxkbmap -layout us -option ctrl:nocaps 2>/dev/null
fi

# git
alias g='git'
alias ga='git add'
alias gal='git add .'
alias gap='git add --patch'
alias gb='git branch --all'
alias gc='git commit'
alias gcm='git commit -m'
alias gcr='git clone --recursive'
alias gco='git checkout'
alias gd='git diff'
alias gds='git diff --staged'
alias gf='git fetch'
alias gl='git log --graph --oneline'
alias gp='git push'
alias gpl='git pull'
alias grb='git rebase'
alias grc='git rebase --continue'
alias gs='git status'
alias gsh='git stash'
alias grh='git reset --hard'
alias gr='git restore'
alias gcls='git clean -fxd'
alias gf='git fetch'
alias gfv='git fetch -v'
alias gurl='git remote get-url --push origin'
alias glsurl='git remote get-url --all origin'
alias gpurl='git remote set-url --push origin'
alias gaurl='g remote set-url --add origin'
gfork() { git remote add fork "$1" && git fetch fork && git merge fork/master; }

# void linux
alias xq='xbps-query -R -s'
alias xi='xbps-install'
alias xr='xbps-remove'

# arch linux
alias p='pacman'
alias pc='rm /var/lib/pacman/db.lck'
alias mpkg='makepkg -si --skippgpcheck --skipinteg --skipchecksums'

#kiss linux
alias k='kiss'
alias kc='kiss-chroot'
knu() { mkdir -p $HOME/kiss/no-updates && cp -r /var/db/kiss/installed/"$1" $HOME/kiss/no-updates; }
kru() { rm -Rf $HOME/kiss/no-updates/"$1"; }
ki() { export KISS_PROMPT=0 && kiss b "$1" && kiss i "$1" && unset KISS_PROMPT; }
kcd() { cd $(kiss search "$1"*) && echo "$(kiss search "$1"*)"; }

# make
alias m='make'
alias mi='make install'
alias mc='make clean'
alias mu='make uninstall'

# random progs
alias grep='grep --color=auto'
alias ls='ls --color=auto'
alias l='ls -glhaS'
alias df='df -h'
alias cp='cp -r'
alias rm='rm -rf'
alias v='vi .'
alias i='vi'
alias s='su root'
alias f='feh --title %f___[%wX%h]_[%u/%l] -p'
alias ,='vi /etc/X11/xinit/xinitrc'
alias ,,='vi /etc/X11/xorg.conf'
alias d='gdb --args'
alias c='cd ..'
alias fnd='find . -name'
alias chromium='chromium --no-sandbox'
alias thw='hwclock --systohc'

fup() { curl -F"file=@$@" https://0x0.st/; }
loc() { find . -name "$@" | xargs wc -l; }
r() { grep -n -r "$@" . ; }
cdls() { cd "$@" && l; }
alias 'cd'='cdls'

compr() {
    FILE=$1
    shift
    case $FILE in
	*.tar.bz2) tar cjf $FILE $*  ;;
	*.tar.gz)  tar czf $FILE $*  ;;
	*.tgz)     tar czf $FILE $*  ;;
	*.zip)     zip $FILE $*      ;;
	*.rar)     rar $FILE $*      ;;
	*)         echo "Filetype not recognized" ;;
   esac
}

## EXTRACT FUNCTION ##
extr () {
    if [ -f $1 ] ; then
	case $1 in
	    *.tar.bz2)   tar xjf $1     ;;
	    *.tar.gz)    tar xzf $1     ;;
	    *.bz2)       bunzip2 $1     ;;
	    *.rar)       unrar e $1     ;;
	    *.gz)        gunzip $1      ;;
	    *.tar)       tar xf $1      ;;
	    *.tbz2)      tar xjf $1     ;;
	    *.tgz)       tar xzf $1     ;;
	    *.zip)       unzip $1       ;;
	    *.Z)         uncompress $1  ;;
	    *.7z)        7z x $1        ;;
	    *)     echo "'$1' cannot be extracted via extract()" ;;
	esac
    else
	echo "'$1' is not a valid file"
    fi
}

o3()
{
	export CFLAGS="-O3 -pipe -mtune=native -march=native"
	export KCFLAGS="$CFLAGS"
	export CXXFLAGS="$CFLAGS"
	export KCPPFLAGS="$CFLAGS"
}

d2()
{
	export CFLAGS="-O2 -g"
	export KCFLAGS="$CFLAGS"
	export CXXFLAGS="$CFLAGS"
	export KCPPFLAGS="$CFLAGS"
}

d0()
{
	export CFLAGS="-O0 -g"
	export KCFLAGS="$CFLAGS"
	export CXXFLAGS="$CFLAGS"
	export KCPPFLAGS="$CFLAGS"
}
